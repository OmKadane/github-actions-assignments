name: 9. Complete CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # 1. TEST JOB (using a matrix)
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [16, 18]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npm test

  # 2. BUILD JOBS (running in parallel)
  build-frontend:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: |
          cd frontend && npm ci && npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

  build-backend:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: |
          cd backend && npm ci && npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: backend/dist

  # 3. DEPLOY TO STAGING (with manual approval)
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    environment:
      name: staging
      url: https://staging.my-app.com
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: deploy/frontend
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: deploy/backend
      - name: Deploy to Staging ðŸš€
        run: echo "Deploying to staging from 'deploy' directory..."

  # 4. DEPLOY TO PRODUCTION (with manual approval)
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      url: https://my-app.com
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: deploy/frontend
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-dist
          path: deploy/backend
      - name: Deploy to Production ðŸš€
        run: echo "Deploying to production from 'deploy' directory..."